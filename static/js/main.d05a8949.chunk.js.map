{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","id","uuidv4","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","ContactList","contacts","map","App","formSubmitHandler","data","prevState","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAKMA,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAiEKC,E,4MA7DbC,M,eACKJ,G,EAELK,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,EAAKC,SAAL,aACEC,GAAIC,eACHd,EAAOW,K,EAIZI,aAAe,SAAAN,GACbA,EAAMO,iBACN,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKP,SAAL,eAAmBb,K,4CAGrB,WACE,OACE,8BACE,uBAAMmB,SAAUE,KAAKL,aAArB,UACE,wBAAOM,QAASD,KAAKhB,YAArB,iBAEE,uBACEkB,KAAK,OACLtB,KAAK,OACLa,GAAIO,KAAKhB,YACTO,MAAOS,KAAKjB,MAAMH,KAClBuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUN,KAAKZ,kBAGnB,wBAAOa,QAASD,KAAKb,cAArB,mBAEE,uBACEe,KAAK,MACLtB,KAAK,SACLa,GAAIO,KAAKb,cACTI,MAAOS,KAAKjB,MAAMF,OAClBsB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUN,KAAKZ,kBAGnB,wBAAQc,KAAK,SAAb,kC,GAvDgBK,aCIXC,EAZK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,6BACGA,EAASC,KAAI,gBAAGjB,EAAH,EAAGA,GAAIb,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,IADFY,SCqBFkB,E,4MArBb5B,MAAQ,CACN0B,SAAU,I,EAGZG,kBAAoB,SAAAC,GAAI,OACtB,EAAKrB,UAAS,SAAAsB,GAAS,MAAK,CAC1BL,SAAS,GAAD,mBAAMK,EAAUL,UAAhB,CAA0BI,S,4CAGtC,WACE,OACE,sBAAKE,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAajB,SAAUE,KAAKY,oBAC5B,0CACA,cAAC,EAAD,CAAaH,SAAUT,KAAKjB,MAAM0B,kB,GAhBxBF,a,MCClBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d05a8949.chunk.js","sourcesContent":["import { Component } from 'react';\r\n// import { PropTypes } from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      id: uuidv4(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id={this.nameInputId}\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={this.numberInputId}\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","// import { PropTypes } from 'prop-types';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n  };\r\n\r\n  formSubmitHandler = data =>\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, data],\r\n    }));\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <ContactList contacts={this.state.contacts} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}